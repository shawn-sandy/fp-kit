@use '../tokens/tokens';

@mixin props() {
  // * css custom properties

  --fw: normal;
  --fst: normal;
  --lh: 1.7;
  --spc: initial;
  --mg: 0;
  --pd: 1rem;
  --px: initial;
  --py: initial;
  --cl: inherit; // font-size
  --bg: initial;
  --bg-img: initial;
  --bdr: initial;
  --line: initial;
  --rds: initial;
  --bdr-w: thin;
  --bdr-s: solid;
  --bdr-cl: lightgray;
  --appearance: none;
  --link-cl:  blue-royal-blue;
  --link-hover-cl: blue;
  --lt-min: min(90%, 1480px);
  --lt-max: max(90%, 1600px);
  --min-w-800: min(100%, calc(800rem /16));
  --w-800: min(100%, calc(800rem /16));
  --align: initial;

  @include tokens.layout-props();
  @include tokens.type-props();

  --tran-all: all .2s ease-in;



  @content;
}

@mixin rules {

  font-size: var(--fs, 1rem);
  font-weight: var(--fw);
  font-style: var(--fst);
  font-family: var(--ff);
  color: var(--cl);
  background-color: var(--bg);
  background-image: var(--bg-img);
  border: var(--bdr);
  outline: var(--line);
  text-align: var(--align);
  // border-radius: var(--rds);
  margin: var(--spc);

  // prefix rules
  --clip-path: initial;
  -webkit-clip-path: var(--clip-path);
  clip-path: var(--clip-path);


  // -webkit-appearance: var(--appearance);
  // appearance: var(--appearance);
  // -moz-appearance: var(--appearance);

  // * css rules/styles
  @content;
}

@mixin styles {
  // * css style utilities
  @content;
}

@mixin module {
  :root {
    @include props;
  }
  * {
    @include rules;
  }
  @include styles;
}
