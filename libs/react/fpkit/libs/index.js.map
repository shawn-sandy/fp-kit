{"version":3,"sources":["../src/components/badge/fp-badge.tsx","../src/components/buttons/button.tsx","../src/components/cards/card.tsx","../src/components/modal/dialog.tsx","../src/components/dropdowns/dropdown-details.tsx","../src/components/dropdowns/dropdown-summary.tsx","../src/components/dropdowns/dropdown.tsx","../src/components/form/fields.tsx","../src/components/layout/landmarks.tsx","../src/components/images/img.tsx","../src/components/form/inputs.tsx","../src/components/link/link.tsx","../src/components/list/list.tsx","../src/components/modal/modal.tsx","../src/components/tables/table-elements.tsx","../src/components/tables/table.tsx","../src/components/text/text.tsx","../src/components/form/textarea.tsx"],"names":["jsx","defStyles","Badge","_a","_b","elm","role","children","renderStyles","styles","props","__objRest","fp_default","__spreadProps","__spreadValues","Button","type","disabled","classes","pointerDown","pointerOver","pointerLeave","e","defaultStyles","Card","dataStyle","id","Dialog","modalRef","openOnMount","Details","title","onToggle","Summary","jsxs","Dropdown","summary","toggle","Field","labelFor","label","Header","Main","Footer","Aside","Section","Article","Img","src","alt","width","height","loading","placeholder","fetchpriority","decoding","imgLoaded","imgError","Input","name","value","isDisabled","readonly","required","inputRef","inputChange","inputBlur","inputDown","Link","href","target","rel","prefetch","onPointerDown","relValue","link_default","List","variant","React","Fragment","Modal","openChild","closeChild","modalHeader","modalFooter","showOpen","dialogRef","openModal","closeModal","Caption","Thead","Tbody","Tr","Td","Table","RenderHead","data","head","item","index","RenderBody","rec","RenderTable","tblBody","tblCaption","tblHead","Text","text","Span","Title","Textarea","rows","cols","textareaBlur","textareaChange","textareaDown","textareaRef","handleChange","handleBlur","handleKeyDown"],"mappings":"sGA4CI,cAAAA,OAAA,oBAjCJ,IAAMC,GAAY,CAChB,cAAe,0BACf,aAAc,0BACd,MAAO,yBACP,SAAU,0BACV,WAAY,0BACZ,WAAY,8BACZ,OAAQ,yBACR,aAAc,0BACd,gBAAiB,0BACjB,eAAgB,gCAChB,cAAe,4BACjB,EAYaC,EAASC,GAOF,CAPE,IAAAC,EAAAD,EACpB,KAAAE,EAAM,OACN,KAAAC,EACA,SAAAC,EACA,aAAAC,EAAe,GACf,OAAAC,EAAS,CAAC,CAxCZ,EAmCsBL,EAMjBM,EAAAC,EANiBP,EAMjB,CALH,MACA,OACA,WACA,eACA,WAGA,OACEJ,GAACY,EAAAC,EAAAC,EAAA,CAAG,GAAIT,EAAK,KAAMC,EAAM,OAAQG,GAAYC,GAA5C,CACE,SAAAH,GACH,CAEJ,EAEAL,EAAM,OAASD,GACfC,EAAM,YAAc,QC8EhB,cAAAF,OAAA,oBA/DG,IAAMC,GAAY,CACvB,cAAe,wBACf,aAAc,wBACd,QAAS,8BACT,WAAY,2BACZ,eAAgB,6BAChB,OAAQ,6BACR,OAAQ,0BACR,MAAO,0BACP,gBAAiB,2BACjB,aAAc,2BAChB,EAqBac,EAAUZ,GAUJ,CAVI,IAAAC,EAAAD,EACrB,MAAAa,EAAO,SACP,SAAAT,EACA,OAAAE,EACA,SAAAQ,EACA,QAAAC,EACA,YAAAC,EACA,YAAAC,EACA,aAAAC,CA1GF,EAkGuBjB,EASlBM,EAAAC,EATkBP,EASlB,CARH,OACA,WACA,SACA,WACA,UACA,cACA,cACA,iBAsBA,OACEJ,GAAC,SAAAa,EAAAC,EAAA,CACC,KAAME,EACN,cAhBuBM,GAA6C,CACjEL,GACHG,GAAA,MAAAA,EAAcE,EAElB,EAaI,cAvBuBA,GAA6C,CACjEL,GACHE,GAAA,MAAAA,EAAcG,EAElB,EAoBI,eAZwBA,GAA6C,CAClEL,GACHI,GAAA,MAAAA,EAAeC,EAEnB,EASI,MAAOb,EACP,gBAAeQ,GACXP,GAPL,CASE,SAAAH,GACH,CAGJ,EAGAQ,EAAO,OAASd,GAChBc,EAAO,YAAc,SCtFjB,cAAAf,OAAA,oBAlCG,IAAMuB,GAAgB,CAC3B,QAAS,sBACT,gBAAiB,wBACjB,UAAW,2DACX,aAAc,8BACd,OAAQ,wBACR,MAAO,uBACT,EAiBaC,EAAQrB,GAQJ,CARI,IAAAC,EAAAD,EACnB,KAAAE,EAAM,MACN,OAAAI,EACA,SAAAF,EACA,aAAAC,EAAe,GACf,UAAAiB,EACA,GAAAC,CAxDF,EAkDqBtB,EAOhBM,EAAAC,EAPgBP,EAOhB,CANH,MACA,SACA,WACA,eACA,YACA,OAGA,OACEJ,GAACY,EAAAC,EAAAC,EAAA,CACC,GAAIT,EACJ,GAAIqB,EACJ,OAAQjB,EACR,aAAcD,EACd,YAAWiB,GACPf,GANL,CAQE,SAAAH,GACH,CAEJ,EAEAiB,EAAK,OAASD,GAEdC,EAAK,YAAc,OCtCf,cAAAxB,OAAA,oBAfG,IAAM2B,EAAUxB,GAMJ,CANI,IAAAC,EAAAD,EACrB,IAAAuB,EACA,SAAAnB,EACA,SAAAqB,EACA,YAAAC,CA1BF,EAsBuBzB,EAKlBM,EAAAC,EALkBP,EAKlB,CAJH,KACA,WACA,WACA,gBAUA,OACEJ,GAACY,EAAAC,EAAAC,EAAA,CACC,GAAG,SACH,GAAIY,EACJ,IAAKE,EACL,KAAMC,EACN,QAZsBP,GAA+C,CACnEA,EAAE,gBAAkBA,EAAE,QACxBA,EAAE,cAAc,MAAM,CAE1B,GASQZ,GANL,CAQE,SAAAH,GACH,CAEJ,EAEAoB,EAAO,YAAc,SCxBjB,cAAA3B,OAAA,oBAjBG,IAAMuB,GAAgB,CAC3B,QAAS,wBACT,gBAAiB,uBACnB,EAEaO,EAAW3B,GAOH,CAPG,IAAAC,EAAAD,EACtB,OAAA4B,EACA,SAAAxB,EACA,OAAAE,EACA,aAAAD,EAAe,GACf,SAAAwB,CAnBF,EAcwB5B,EAMnBM,EAAAC,EANmBP,EAMnB,CALH,QACA,WACA,SACA,eACA,aAMA,OACEJ,GAACY,EAAA,CAAG,GAAG,UAAU,MAAOmB,EAAO,SAJXT,GAA4B,CAChDU,GAAA,MAAAA,EAAWV,EACb,EAEyD,OAAQb,EAC5D,SAAAF,EACH,CAEJ,EACAuB,EAAQ,OAASP,GAEjBO,EAAQ,YAAc,UCVlB,cAAA9B,OAAA,oBAdG,IAAMuB,GAAgB,CAC3B,UAAW,OACX,eAAgB,wCAChB,MAAO,qCACP,OAAQ,+BACV,EAEaU,EAAW9B,GAKL,CALK,IAAAC,EAAAD,EACtB,UAAAI,EACA,OAAAE,EACA,aAAAD,EAAe,EAnBjB,EAgBwBJ,EAInBM,EAAAC,EAJmBP,EAInB,CAHH,WACA,SACA,iBAGA,OACEJ,GAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,UAAU,OAAQL,GAAYC,GAApC,CACE,SAAAH,GACH,CAEJ,EAEA0B,EAAQ,OAASV,GACjBU,EAAQ,YAAc,UCElB,OACE,OAAAjC,GADF,QAAAkC,OAAA,oBAtBJ,IAAMX,GAAgB,CACpB,QAAS,OACT,aAAc,aACd,WAAY,SACZ,IAAK,QACL,OAAQ,wCACR,WAAY,gBACZ,gBAAiB,gCACjB,QAAS,4BACT,SAAU,6BACV,SAAU,4BACZ,EAEaY,EAAYhC,GAOJ,CAPI,IAAAC,EAAAD,EACvB,QAAAM,EACA,SAAAF,EACA,QAAA6B,EACA,OAAAC,EACA,aAAA7B,EAAe,EA5BjB,EAuByBJ,EAMpBM,EAAAC,EANoBP,EAMpB,CALH,SACA,WACA,UACA,SACA,iBAGA,OACE8B,GAACJ,EAAAjB,EAAAC,EAAA,CAAQ,OAAQL,EAAQ,SAAU4B,GAAY3B,GAA9C,CACC,UAAAV,GAACiC,EAAA,CAAS,SAAAG,EAAQ,EACjB7B,IACH,CAEJ,EAEA4B,EAAS,OAASZ,GAClBY,EAAS,QAAUF,EACnBE,EAAS,QAAUL,EAGnBK,EAAS,YAAc,WCZnB,OACE,OAAAnC,GADF,QAAAkC,OAAA,oBAlBG,IAAMX,GAAgB,CAAC,EAUjBe,EAASnC,GAMJ,CANI,IAAAC,EAAAD,EACpB,UAAAoC,EACA,OAAA9B,EACA,MAAA+B,EACA,SAAAjC,CA5BF,EAwBsBH,EAKjBM,EAAAC,EALiBP,EAKjB,CAJH,WACA,SACA,QACA,aAGA,OACE8B,GAACtB,EAAA,CAAG,GAAG,MAAM,OAAQH,EAAQ,aAAW,SACtC,UAAAT,GAAC,SAAM,QAASuC,EAAW,SAAAC,EAAM,EAChCjC,GACH,CAEJ,EAEA+B,EAAM,OAASf,GAEfe,EAAM,YAAc,QC/Bd,cAAAtC,MAAA,oBAHC,IAAMyC,EAAUtC,GAAwD,CAAxD,IAAAC,EAAAD,EAAE,UAAAI,EAAU,OAAAE,EAAS,CAAC,CAP7C,EAOuBL,EAA4BM,EAAAC,EAA5BP,EAA4B,CAA1B,WAAU,WACjC,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,UAAaJ,GAAnB,CAA0B,OAAQD,EACjC,SAAAT,EAACY,EAAA,CAAG,GAAG,UAAW,SAAAL,EAAS,GAC7B,CAEJ,EAEamC,EAAQvC,GAAwD,CAAxD,IAAAC,EAAAD,EAAE,UAAAI,EAAU,OAAAE,EAAS,CAAC,CAf3C,EAeqBL,EAA4BM,EAAAC,EAA5BP,EAA4B,CAA1B,WAAU,WAC/B,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,OAAO,OAAQL,GAAYC,GAAjC,CACE,SAAAH,GACH,CAEJ,EAEaoC,EAAUxC,GAAwD,CAAxD,IAAAC,EAAAD,EAAE,UAAAI,EAAU,OAAAE,EAAS,CAAC,CAvB7C,EAuBuBL,EAA4BM,EAAAC,EAA5BP,EAA4B,CAA1B,WAAU,WACjC,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,SAAS,OAAQL,GAAYC,GAAnC,CACC,SAAAV,EAACY,EAAA,CAAG,GAAG,UAAW,SAAAL,GAAY,sBAAmB,GACnD,CAEJ,EAEaqC,EAASzC,GAAwD,CAAxD,IAAAC,EAAAD,EAAE,UAAAI,EAAU,OAAAE,EAAS,CAAC,CA/B5C,EA+BsBL,EAA4BM,EAAAC,EAA5BP,EAA4B,CAA1B,WAAU,WAChC,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,QAAQ,OAAQL,GAAYC,GAAlC,CACC,SAAAV,EAACY,EAAA,CAAG,GAAG,UAAW,SAAAL,EAAS,GAC7B,CAEJ,EAEasC,EAAW1C,GAIF,CAJE,IAAAC,EAAAD,EACtB,UAAAI,EACA,OAAAE,EAAS,CAAC,CAzCZ,EAuCwBL,EAGnBM,EAAAC,EAHmBP,EAGnB,CAFH,WACA,WAGA,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,UAAU,OAAQL,GAAYC,GAApC,CACE,SAAAH,GACH,CAEJ,EAEauC,EAAW3C,GAIF,CAJE,IAAAC,EAAAD,EACtB,UAAAI,EACA,OAAAE,EAAS,CAAC,CArDZ,EAmDwBL,EAGnBM,EAAAC,EAHmBP,EAGnB,CAFH,WACA,WAGA,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,UAAU,OAAQL,GAAYC,GAApC,CACE,SAAAH,GACH,CAEJ,EAEAkC,EAAO,YAAc,SACrBC,EAAK,YAAc,OACnBC,EAAO,YAAc,SACrBC,EAAM,YAAc,QACpBC,EAAQ,YAAc,UACtBC,EAAQ,YAAc,UCqClB,cAAA9C,OAAA,oBA9DG,IAAMuB,GAAgB,CAC3B,SAAU,qBACV,OAAQ,qBACR,UAAW,4BACX,eAAgB,qCAChB,YAAa,6BACb,QAAS,6BACX,EAsBawB,EAAO5C,GAaF,CAbE,IAAAC,EAAAD,EAClB,KAAA6C,EACA,IAAAC,EACA,MAAAC,EAAQ,IACR,OAAAC,EACA,OAAA1C,EACA,QAAA2C,EAAU,OACV,YAAAC,EAAc,+BAA+BH,CAAK,oBAClD,cAAAI,EAAgB,MAChB,SAAAC,EAAW,OACX,UAAAC,EACA,SAAAC,CAnFF,EAwEoBrD,EAYfM,EAAAC,EAZeP,EAYf,CAXH,MACA,MACA,QACA,SACA,SACA,UACA,cACA,gBACA,WACA,YACA,aAqBA,OACEJ,GAACY,EAAAE,EAAA,CACC,GAAG,MACH,IAAKkC,EACL,IAAKC,EACL,MAAOC,EACP,OAAQC,GAAU,OAClB,QAASC,EACT,MAAO3C,EACP,QA1BFa,GACS,CACT,GAAImC,EAAU,CACZA,GAAA,MAAAA,EAAWnC,GACX,MACF,CACIA,EAAE,cAAc,MAAQ+B,IAC1B/B,EAAE,cAAc,IAAM+B,EAE1B,EAkBI,OAfF/B,GACS,CACTkC,GAAA,MAAAA,EAAYlC,EACd,GAaQZ,EACN,CAEJ,EACAqC,EAAI,OAASxB,GACbwB,EAAI,YAAc,MCVd,cAAA/C,OAAA,oBA9CG,IAAMuB,GAAgB,CAC3B,SAAU,yBACZ,EAOamC,EAASvD,GAgBS,CAhBT,IAAAC,EAAAD,EACpB,MAAAa,EAAO,OACP,KAAA2C,EACA,MAAAC,EACA,YAAAP,EACA,GAAA3B,EACA,OAAAjB,EACA,QAAAS,EACA,WAAA2C,EACA,SAAAC,EACA,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,UAAAC,EACA,UAAAC,CAvFF,EAyEsB/D,EAejBM,EAAAC,EAfiBP,EAejB,CAdH,OACA,OACA,QACA,cACA,KACA,SACA,UACA,aACA,WACA,WACA,WACA,cACA,YACA,cAsBA,OACEJ,GAACY,EAAAE,EAAA,CACC,GAAG,QACH,GAAIY,EACJ,KAAMV,EACN,YAAaqC,EACb,UAAWnC,EACX,OAAQT,EACR,SA3BkBa,GAA2C,CAC3D2C,GAAe,CAACJ,IAClBI,GAAA,MAAAA,EAAc3C,GAElB,EAwBI,OAtBgBA,GAA0C,CACxD4C,GAAa,CAACL,IAChBK,GAAA,MAAAA,EAAY5C,GAEhB,EAmBI,UAjBmBA,GAA6C,CAC9D6C,GAAa,CAACN,IAChBvC,EAAE,eAAe,EACjB6C,GAAA,MAAAA,EAAY7C,GAEhB,EAaI,MAAOsC,EACP,KAAMD,EACN,IAAKK,EACL,gBAAeH,EACf,YAAWA,EAAa,GAAK,OAC7B,gBAAeC,EACf,SAAUA,GACNpD,EACN,CAEJ,EACAgD,EAAM,OAASnC,GACfmC,EAAM,YAAc,QCpGhB,cAAA1D,OAAA,oBApBG,IAAMoE,EAAQjE,GASJ,CATI,IAAAC,EAAAD,EACnB,MAAAkE,EACA,OAAAC,EACA,IAAAC,EACA,SAAAhE,EACA,OAAAE,EAAS,CAAC,EACV,SAAA+D,EAAW,GACX,cAAAC,CAnBF,EAYqBrE,EAQhBM,EAAAC,EARgBP,EAQhB,CAPH,OACA,SACA,MACA,WACA,SACA,WACA,kBAGA,IAAIsE,EAAWH,EAEf,OAAID,IAAW,WACbI,EAAW,uBAAyBF,EAAW,WAAa,EAAE,IAO9DxE,GAACY,EAAAC,EAAAC,EAAA,CACC,GAAG,IACH,KAAMuD,EACN,OAAQC,EACR,OAAQ7D,EACR,IAAKiE,EACL,cAXyBpD,GAA6C,CACpEmD,IAAeA,GAAA,MAAAA,EAAgBnD,GACrC,GAUQZ,GAPL,CASE,SAAAH,GAAA,KAAAA,EAAY,QACf,CAEJ,EAEOoE,GAAQP,EACfA,EAAK,YAAc,OC3Bf,cAAApE,OAAA,oBATG,IAAM4E,GAAQzE,GAOJ,CAPI,IAAAC,EAAAD,EACnB,UAAAI,EACA,QAAAW,EACA,KAAAF,EAAO,KACP,QAAA6D,EACA,OAAApE,CAhBF,EAWqBL,EAMhBM,EAAAC,EANgBP,EAMhB,CALH,WACA,UACA,OACA,UACA,WAGA,OACEJ,GAACY,EAAAC,EAAAC,EAAA,CACC,GAAIE,EACJ,eAAc6D,EACd,UAAW3D,EACX,MAAOT,GACHC,GALL,CAOE,SAAAH,GACH,CAEJ,EC9BA,OAAOuE,OAAW,QAwDd,mBAAAC,GAOU,OAAA/E,EADF,QAAAkC,MANR,oBAzBG,IAAM8C,EAAS7E,GAQJ,CARI,IAAAC,EAAAD,EACpB,WAAA8E,EACA,WAAAC,EACA,YAAAC,EACA,YAAAC,EACA,SAAA7E,EACA,SAAA8E,EAAW,EArCb,EA+BsBjF,EAOjBM,EAAAC,EAPiBP,EAOjB,CANH,YACA,aACA,cACA,cACA,WACA,aAGA,IAAMkF,EAAYR,GAAM,OAA0B,IAAI,EAChDS,EAAY,IAAY,CACxBD,EAAU,UACTD,EACHC,EAAU,QAAQ,KAAK,EAEvBA,EAAU,QAAQ,UAAU,EAEhC,EACME,EAAa,IAAM,CACnBF,EAAU,SACZA,EAAU,QAAQ,MAAM,CAE5B,EAEA,OACEpD,EAAA6C,GAAA,CACE,UAAA/E,EAAC2B,EAAAd,EAAAC,EAAA,CAAO,SAAUwE,EAAW,YAAaD,GAAc3E,GAAvD,CACC,SAAAwB,EAAC,WACE,UAAAiD,EACA5E,EACA6E,GAAA,KAAAA,EACClD,EAAC,OACC,UAAAlC,EAACe,EAAA,CACC,KAAK,SACL,YAAa,IAAM,CACjByE,EAAW,CACb,EAEC,SAAAN,GAAc,QACjB,EAAU,KACZ,GAEJ,GACF,EACE,CAACG,GACHrF,EAACe,EAAA,CAAO,KAAK,SAAS,YAAawE,EAChC,SAAAN,GAAa,aAChB,GAEF,CAEJ,EAEAD,EAAM,YAAc,QC7EhB,cAAAhF,MAAA,oBAFG,IAAMyF,EAAWtF,GAA2C,CAA3C,IAAAC,EAAAD,EAAE,UAAAI,CAL1B,EAKwBH,EAAeM,EAAAC,EAAfP,EAAe,CAAb,aACxB,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,WAAcJ,GAApB,CACE,SAAAH,GACH,CAEJ,EAEamF,EAASvF,GAAwC,CAAxC,IAAAC,EAAAD,EAAE,UAAAI,CAbxB,EAasBH,EAAeM,EAAAC,EAAfP,EAAe,CAAb,aACtB,OAAAJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,SAAYJ,GAAlB,CACE,SAAAH,GACH,GAGWoF,EAASxF,GAAwC,CAAxC,IAAAC,EAAAD,EAAE,UAAAI,CAnBxB,EAmBsBH,EAAeM,EAAAC,EAAfP,EAAe,CAAb,aACtB,OAAAJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,SAAYJ,GAAlB,CACE,SAAAH,GACH,GAGWqF,EAAMzF,GAAwC,CAAxC,IAAAC,EAAAD,EAAE,UAAAI,CAzBrB,EAyBmBH,EAAeM,EAAAC,EAAfP,EAAe,CAAb,aACnB,OAAAJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,MAASJ,GAAf,CACE,SAAAH,GACH,GAGWsF,EAAM1F,GAAwC,CAAxC,IAAAC,EAAAD,EAAE,UAAAI,CA/BrB,EA+BmBH,EAAeM,EAAAC,EAAfP,EAAe,CAAb,aACnB,OAAAJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAG,MAASJ,GAAf,CACE,SAAAH,GACH,GAGWuF,EAAS3F,GAA0D,CAA1D,IAAAC,EAAAD,EAAE,IAAAuB,EAAI,UAAAD,EAAW,SAAAlB,CArCvC,EAqCsBH,EAA8BM,EAAAC,EAA9BP,EAA8B,CAA5B,KAAI,YAAW,aACrC,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CACC,GAAG,UACH,GAAIY,GACAhB,GAHL,CAIC,aAAW,gBAEX,SAAAV,EAAC,SAAO,SAAAO,EAAS,GACnB,CAEJ,EAEAuF,EAAM,YAAc,QACpBL,EAAQ,YAAc,UACtBC,EAAM,YAAc,QACpBC,EAAM,YAAc,QACpBC,EAAG,YAAc,KACjBC,EAAG,YAAc,KCvCN,cAAA7F,EA8BP,QAAAkC,OA9BO,oBAFJ,IAAM6D,GAAcC,GAAa,CACtC,IAAMC,EAAOD,EAAK,IAAI,CAACE,EAAMC,IACpBnG,EAAC,MAAgB,SAAAkG,GAARC,CAAa,CAC9B,EACD,OACEnG,EAAC,MACE,SAAAiG,EACH,CAEJ,EAKaG,GAAcJ,GAAe,CACxC,IAAMK,EAAML,EAAK,IAAI,CAACE,EAAMC,IAExBnG,EAAC,QAAQmG,CAGT,CAEH,EACD,OAAQnG,EAAC2F,EAAA,CAAO,SAAAU,EAAI,CACtB,EAMaC,EAAc,CAAC,CAAC,QAAAC,EAAS,WAAAC,EAAY,QAAAC,CAAO,IAErDvE,GAAC4D,EAAA,CACE,UAAAU,GAAcxG,EAACyF,EAAA,CAAS,SAAAe,EAAW,EACpCxG,EAAC0F,EAAA,CACC,SAAA1F,EAAC4F,EAAA,CACE,SAAAa,EACH,EACF,EACAzG,EAAC2F,EAAA,CACE,SAAAY,EACH,GACF,EAIJD,EAAY,YAAc,MAC1BF,GAAW,YAAc,aACzBL,GAAW,YAAc,aCrBrB,cAAA/F,MAAA,oBARG,IAAM0G,GAAQvG,GAMJ,CANI,IAAAC,EAAAD,EACnB,KAAAE,EAAM,IACN,KAAAsG,EACA,OAAAlG,EACA,SAAAF,CArCF,EAiCqBH,EAKhBM,EAAAC,EALgBP,EAKhB,CAJH,MACA,OACA,SACA,aAGA,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAIT,EAAK,OAAQI,GAAYC,GAAhC,CACE,SAAAH,GAAYoG,GACf,CAEJ,EAEaC,GAAQzG,GAKJ,CALI,IAAAC,EAAAD,EACnB,KAAAE,EAAM,OACN,SAAAE,EACA,OAAAE,CAlDF,EA+CqBL,EAIhBM,EAAAC,EAJgBP,EAIhB,CAHH,MACA,WACA,WAGA,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAIT,EAAK,OAAQI,GAAYC,GAAhC,CACE,SAAAH,GACH,CAEJ,EAWasG,GAAS1G,GAKJ,CALI,IAAAC,EAAAD,EACpB,KAAAE,EAAM,KACN,SAAAE,EACA,OAAAE,CAxEF,EAqEsBL,EAIjBM,EAAAC,EAJiBP,EAIjB,CAHH,MACA,WACA,WAGA,OACEJ,EAACY,EAAAC,EAAAC,EAAA,CAAG,GAAIT,EAAK,OAAQI,GAAYC,GAAhC,CACE,SAAAH,GACH,CAEJ,EAIAmG,GAAK,YAAc,OACnBG,GAAM,YAAc,QACpBD,GAAK,YAAc,OCpBf,cAAA5G,OAAA,oBAnCG,IAAMuB,GAAgB,CAAC,EAEjBuF,GAAY3G,GAaJ,CAbI,IAAAC,EAAAD,EACvB,OAAAyD,EACA,KAAAmD,EACA,KAAAC,EACA,GAAAtF,EACA,SAAAqC,EACA,SAAA9C,EACA,SAAA6C,EACA,aAAAmD,EACA,eAAAC,EACA,aAAAC,EACA,YAAAC,CA5CF,EAiCyBhH,EAYpBM,EAAAC,EAZoBP,EAYpB,CAXH,QACA,OACA,OACA,KACA,WACA,WACA,WACA,eACA,iBACA,eACA,gBAGA,IAAMiH,EAAgB/F,GAA8C,CAC9D4F,GAAkB,CAACjG,GACrBiG,EAAe5F,CAAC,CAEpB,EAEMgG,EAAchG,GAA6C,CAC3D2F,GAAgB,CAAChG,IACnBgG,GAAA,MAAAA,EAAe3F,GAEnB,EAEMiG,EAAiBjG,GAAgD,CACjE6F,GAAgB,CAAClG,IACnBkG,GAAA,MAAAA,EAAe7F,GAEnB,EAEA,OACEtB,GAACY,EAAAE,EAAA,CACC,GAAG,WACH,IAAKsG,EACL,KAAML,EACN,KAAMC,EACN,OAAQlG,EAAA,GAAKS,IACb,aAAW,WACX,GAAIG,EACJ,SAAUqC,EACV,MAAOH,EACP,gBAAe3C,EACf,SAAU6C,EACV,SAAUuD,EACV,OAAQC,EACR,UAAWC,GACP7G,EACN,CAEJ,EAEAoG,GAAS,YAAc","sourcesContent":["import FP from '#components/fp'\nimport React from 'react'\n\nexport interface FpBadgeProps {\n  elm?: 'span' | 'p'\n  children: React.ReactNode\n  role: 'note' | 'alert' | 'status'\n  renderStyles?: boolean\n  styles?: {}\n}\n\nconst defStyles = {\n  paddingInline: 'var(--badge-px, 0.7rem)',\n  paddingBlock: 'var(--badge-py, 0.2rem)',\n  color: 'var(--badge-cl, black)',\n  fontSize: 'var(--badge-fs, 0.8rem)',\n  fontWeight: 'var(--badge-fw, normal)',\n  fontFamily: 'var(--badge-ff, sans-serif)',\n  border: 'var(--badge-brd, none)',\n  borderRadius: 'var(--badge-rds, 99rem)',\n  backgroundColor: 'var(--badge-bg, \"blue\")',\n  textDecoration: 'var(--badge-decoration, none)',\n  textTransform: 'var(--badge-tt, var(--tt))',\n}\n\n/**\n * @description Creates a Badge component that wraps a child element with a badge.\n * @param {string} elm - element type to render\n * @param {string} role - aria role\n * @param {any} children - child element to render\n * @param {boolean} renderStyles - whether or not to render the default styles\n * @param {object} styles - styles to pass to the FP component\n * @param {object} props - additional props to pass to the FP component\n * @returns {any} - returns the Badge component\n */\nexport const Badge = ({\n  elm = 'span',\n  role,\n  children,\n  renderStyles = true,\n  styles = {},\n  ...props\n}: FpBadgeProps) => {\n  return (\n    <FP as={elm} role={role} styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nBadge.styles = defStyles\nBadge.displayName = 'Badge'\n","import { ComponentProps } from '#/types'\n// import React from 'react'\nimport FP from '#components/fp'\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The type of the button.\n   */\n  type: 'button' | 'submit' | 'reset'\n\n  /**\n   * Button label/content\n   */\n  children: React.ReactNode\n\n  /**\n   * Button styles and props\n   */\n  styles?: object\n\n  /**\n   * button classes\n   */\n  classes?: string\n\n  /**\n   * @deprecated import styles Button.styles\n   * default button styles\n   */\n  defaultStyles?: boolean\n\n  /**\n   * Button pointer-down event (pointerOver, pointerLeave)\n   */\n  pointerDown?: (e: React.PointerEvent) => void\n\n  /**\n   * Button pointer-down event (pointerOver, pointerLeave)\n   */\n  pointerOver?: (e: React.PointerEvent) => void\n\n  /**\n   * Pointer leave event handler for the Button component.\n   *\n   * @param {React.PointerEvent} e - The pointer event\n   */\n  pointerLeave?: (e: React.PointerEvent) => void\n}\n\n/**\n * Default styles object for the Button component.\n *\n * Defines CSS custom properties used for styling buttons.\n *\n * @property {string} --btn-px - Padding left/right\n * @property {string} --btn-py - Padding top/bottom\n * @property {string} --btn-dsp - Display value\n * @property {string} --btn-place - place-items value\n * @property {string} --btn-justify - justify-content value\n * @property {string} --btn-cursor - Cursor value\n * @property {string} --btn-border - Border value\n * @property {string} --btn-color - Text color\n * @property {string} --btn-bg - Background color\n * @property {string} --btn-radius - Border radius\n */\nexport const defStyles = {\n  paddingInline: 'var(--btn-px, 1.4rem)',\n  paddingBlock: 'var(--btn-py, 0.8rem)',\n  display: 'var(--btn-dsp, inline-flex)',\n  placeItems: 'var(--btn-place, center)',\n  justifyContent: 'var(--btn-justify, center)',\n  cursor: 'var(--btn-cursor, pointer)',\n  border: 'var(--btn-border, none)',\n  color: 'var(--btn-color, white)',\n  backgroundColor: 'var(--btn-bg, royalblue)',\n  borderRadius: 'var(--btn-radius, 0.2rem)',\n}\n\n/*\n * Button component\n *\n * Renders a <button> element with custom props.\n *\n * @param {ButtonProps} props - The component props\n * @param {\"button\" | \"submit\" | \"reset\"} [props.type=\"button\"] - The button type\n * @param {ReactNode} props.children - The button label/content\n * @param {Object} [props.styles] - Custom CSS styles\n * @param {boolean} [props.disabled=false] - Whether the button is disabled\n * @param {string} [props.classes] - Custom CSS classes\n * @param {function} [props.pointerDown] - Pointer down event handler\n * @param {function} [props.pointerOver] - Pointer over event handler\n * @param {function} [props.pointerLeave] - Pointer leave event handler\n * @param {boolean} [props.defaultStyles=false] - Whether to apply default styles\n *\n * @returns {JSX.Element} The rendered <button> element\n */\n\nexport const Button = ({\n  type = 'button',\n  children,\n  styles,\n  disabled,\n  classes,\n  pointerDown,\n  pointerOver,\n  pointerLeave,\n  ...props\n}: ButtonProps) => {\n  const handlePointerDown = (e: React.PointerEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      pointerDown?.(e)\n    }\n  }\n\n  const handlePointerOver = (e: React.PointerEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      pointerOver?.(e)\n    }\n  }\n\n  const handlePointerLeave = (e: React.PointerEvent<HTMLButtonElement>) => {\n    if (!disabled) {\n      pointerLeave?.(e)\n    }\n  }\n\n  /* Returning a button element. */\n  return (\n    <button\n      type={type}\n      onPointerOver={handlePointerOver}\n      onPointerDown={handlePointerDown}\n      onPointerLeave={handlePointerLeave}\n      style={styles}\n      aria-disabled={disabled}\n      {...props}\n    >\n      {children}\n    </button>\n  )\n  //\n}\n\nexport default Button\nButton.styles = defStyles\nButton.displayName = 'Button'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\n\n/*\n * CardProps interface\n *\n * Extends ComponentProps. Defines props for the Card component.\n *\n * @property {('div' | 'aside' | 'section' | 'article')} [elm='div'] - HTML element to render as\n */\nexport interface CardProps extends ComponentProps {\n  elm?: 'div' | 'aside' | 'section' | 'article'\n}\n\n/*\n * Default styles for the Card component.\n *\n * Defines CSS custom properties for styling cards.\n *\n * @property {string} --card-p - Padding\n * @property {string} --card-bg - Background color\n * @property {string} --card-shadow - Box shadow\n * @property {string} --card-rds - Border radius\n * @property {string} --card-brd - Border\n * @property {string} --card-cl - Text color\n */\nexport const defaultStyles = {\n  padding: 'var(--card-p, 2rem)',\n  backgroundColor: 'var(--card-bg, white)',\n  boxShadow: 'var(--card-shadow, 0 0 0.5rem 0.1rem rgba(0, 0, 0, 0.1))',\n  borderRadius: 'var(--card-rds, 0.2ßrem)',\n  border: 'var(--card-brd, none)',\n  color: 'var(--card-cl, black)',\n}\n\n/*\n * Card component\n *\n * Renders a card container.\n *\n * @param {CardProps} props - Component props\n * @param {('div' | 'aside' | 'section' | 'article')} [props.elm='div'] - Element to render as\n * @param {Object} [props.styles] - CSS styles to apply\n * @param {ReactNode} props.children - Card content\n * @param {boolean} [props.renderStyles=true] - Whether to render default styles\n * @param {string} [props.dataStyle] - data-card attribute value\n * @param {string} [props.id] - Unique ID\n *\n * @returns {ReactElement} Card component\n */\nexport const Card = ({\n  elm = 'div',\n  styles,\n  children,\n  renderStyles = true,\n  dataStyle,\n  id,\n  ...props\n}: CardProps) => {\n  return (\n    <FP\n      as={elm}\n      id={id}\n      styles={styles}\n      renderStyles={renderStyles}\n      data-card={dataStyle}\n      {...props}\n    >\n      {children}\n    </FP>\n  )\n}\n\nCard.styles = defaultStyles\n\nCard.displayName = 'Card'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\nimport { Button } from '../buttons/button'\nimport React, { MouseEventHandler, useEffect } from 'react'\n\nexport interface DialogProps extends ComponentProps {\n  /**\n   * React ref for dialog element\n   */\n  modalRef: React.RefObject<HTMLDialogElement>\n  /**\n   * Handle close modal event\n   */\n  closeModal?: (e: React.SyntheticEvent<HTMLDialogElement>) => void\n  /**\n   * open modal on mount\n   */\n  openOnMount?: boolean\n}\n/**\n * Dialog component\n */\nexport const Dialog = ({\n  id,\n  children,\n  modalRef,\n  openOnMount,\n  ...props\n}: DialogProps) => {\n\n  const handleCloseModal = (e: React.SyntheticEvent<HTMLDialogElement>) => {\n    if (e.currentTarget === e.target) {\n      e.currentTarget.close()\n    }\n  }\n\n  return (\n    <FP\n      as=\"dialog\"\n      id={id}\n      ref={modalRef}\n      open={openOnMount}\n      onClick={handleCloseModal}\n      {...props}\n    >\n      {children}\n    </FP>\n  )\n}\n\nDialog.displayName = 'Dialog'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\nexport interface DropdownProps extends ComponentProps {\n  elm?: 'div' | 'aside'\n  title: string\n  children: React.ReactNode\n  onToggle?: (e: React.SyntheticEvent) => void\n}\n\nexport const defaultStyles = {\n  padding: 'var(--card-p, 1.2rem)',\n  backgroundColor: 'var(--card-bg, white)',\n}\n\nexport const Details = ({\n  title,\n  children,\n  styles,\n  renderStyles = true,\n  onToggle,\n  ...props\n}: DropdownProps) => {\n  const handleToggle = (e: React.SyntheticEvent) => {\n    onToggle?.(e)\n  }\n  return (\n    <FP as=\"details\" title={title} onToggle={handleToggle} styles={styles}>\n      {children}\n    </FP>\n  )\n}\nDetails.styles = defaultStyles\nexport default Details\nDetails.displayName = 'Details'\n","// import { defStyles } from \"@fpkit/fp-button/lib/components/button\"\nimport FP from '../fp'\n\nexport interface SummaryPros {\n  children: React.ReactNode\n  styles?: {}\n  renderStyles?: boolean\n}\n\nexport const defaultStyles = {\n  listStyle: 'none',\n  justifyContent: 'var(--summary-justify, space-between)',\n  color: 'var(--summary-color, currentColor)',\n  cursor: 'var(--detail-cursor, pointer)',\n}\n\nexport const Summary = ({\n  children,\n  styles,\n  renderStyles = true,\n  ...props\n}: SummaryPros) => {\n  return (\n    <FP as=\"summary\" styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nSummary.styles = defaultStyles\nSummary.displayName = 'Summary'\nexport default Summary\n","import { ComponentProps } from '../../types'\nimport { Details } from './dropdown-details'\nimport { Summary } from './dropdown-summary'\n\nexport interface DropdownProps extends ComponentProps {\n  title: string\n  summary: React.ReactNode\n  toggle?: (e: React.SyntheticEvent) => void\n}\n\nconst defaultStyles = {\n  display: 'flex',\n  placeContent: 'flex-start',\n  placeItems: 'center',\n  gap: '.7rem',\n  border: 'var(--summary-border, solid 1px #ccc)',\n  transition: 'all 0.2s ease',\n  backgroundColor: 'var(--summary-bg, whitesmoke)',\n  padding: 'var(--details-pd, 1.2rem)',\n  minWidth: 'var(--summary-min-w, 80vw)',\n  maxWidth: 'var(--summary-min-w, 80vw)',\n}\n\nexport const Dropdown = ({\n  styles,\n  children,\n  summary,\n  toggle,\n  renderStyles = true,\n  ...props\n}: DropdownProps) => {\n  return (\n    <Details styles={styles} onToggle={toggle} {...props}>\n      <Summary>{summary}</Summary>\n      {children}\n    </Details>\n  )\n}\n\nDropdown.styles = defaultStyles\nDropdown.Summary = Summary\nDropdown.Details = Details\n\nexport default Dropdown\nDropdown.displayName = 'Dropdown'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\n\nexport interface FieldProps extends ComponentProps {\n  /**\n   * Defines the for attribute of the label element\n   */\n  labelFor: string\n  /**\n   * The label content\n   */\n  label: React.ReactNode\n}\n\nexport const defaultStyles = {}\n\n/**\n * Field component that renders a label and children wrapped in a div element.\n * @param labelFor Defines the for attribute of the label element\n * @param styles Custom styles to be applied to the component\n * @param label The label content\n * @param children The children to be rendered inside the component\n * @param props Additional props to be spread to the component\n */\nexport const Field = ({\n  labelFor,\n  styles,\n  label,\n  children,\n  ...props\n}: FieldProps) => {\n  return (\n    <FP as=\"div\" styles={styles} data-style=\"fields\">\n      <label htmlFor={labelFor}>{label}</label>\n      {children}\n    </FP>\n  )\n}\n\nField.styles = defaultStyles\n\nField.displayName = 'Field'\n","/**\n * @fileoverview Landmarks components\n */\n\nimport FP from '../fp'\nimport { ComponentProps } from '../../types'\n\nexport const Header = ({ children, styles = {}, ...props }: ComponentProps) => {\n  return (\n    <FP as=\"header\" {...props} styles={styles}>\n      <FP as=\"section\">{children}</FP>\n    </FP>\n  )\n}\n\nexport const Main = ({ children, styles = {}, ...props }: ComponentProps) => {\n  return (\n    <FP as=\"main\" styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nexport const Footer = ({ children, styles = {}, ...props }: ComponentProps) => {\n  return (\n    <FP as=\"footer\" styles={styles} {...props}>\n      <FP as=\"section\">{children || 'Copyright © 2022'}</FP>\n    </FP>\n  )\n}\n\nexport const Aside = ({ children, styles = {}, ...props }: ComponentProps) => {\n  return (\n    <FP as=\"aside\" styles={styles} {...props}>\n      <FP as=\"section\">{children}</FP>\n    </FP>\n  )\n}\n\nexport const Section = ({\n  children,\n  styles = {},\n  ...props\n}: ComponentProps) => {\n  return (\n    <FP as=\"section\" styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nexport const Article = ({\n  children,\n  styles = {},\n  ...props\n}: ComponentProps) => {\n  return (\n    <FP as=\"article\" styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nHeader.displayName = 'Header'\nMain.displayName = 'Main'\nFooter.displayName = 'Footer'\nAside.displayName = 'Aside'\nSection.displayName = 'Section'\nArticle.displayName = 'Article'\n","import FP from '../fp'\nimport { ComponentProps } from 'src/types'\n\n/*\n * ImageProps interface\n *\n * Extends ComponentProps and defines additional props for the Img component.\n *\n * @property {string} [src] - The image source URL\n * @property {string} alt - Required alt text for image accessibility\n * @property {number} width - Required width of image\n * @property {number} [height] - Optional height of image\n * @property {\"eager\" | \"lazy\"} [loading=\"lazy\"] - Loading behavior\n * @property {string} [placeholder] - Fallback placeholder image\n * @property {\"high\" | \"low\"} [fetchpriority=\"low\"] - Image fetch priority\n * @property {\"sync\" | \"async\" | \"auto\"} [decoding=\"auto\"] - Decode setting\n * @property {function} [imgError] - Error callback\n * @property {function} [imgLoaded] - Loaded callback\n */\n\nexport interface ImageProps extends ComponentProps {\n  alt: string\n  src?: string\n  width?: number\n  height?: number\n  loading?: 'eager' | 'lazy'\n  placeholder?: string\n  fetchpriority?: 'high' | 'low'\n  decoding?: 'sync' | 'async' | 'auto'\n  imgError?: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void\n  imgLoaded?: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void\n}\n\n/*\n * Default styles object for the Img component.\n *\n * @property {string} maxWidth - Sets the max-width CSS property. Default is 'var(--img-w, 100%)'.\n * @property {string} height - Sets the height CSS property. Default is 'var(--img-h, auto)'.\n * @property {string} objectFit - Sets the object-fit CSS property. Default is 'var(--img-obj-fit, cover)'.\n * @property {string} objectPosition - Sets the object-position CSS property. Default is 'var(--img-position, center center)'.\n * @property {string} aspectRatio - Sets the aspect-ratio CSS property. Default is 'var(--img-ratio, auto 2/3)'.\n */\n\nexport const defaultStyles = {\n  maxWidth: 'var(--img-w, 100%)',\n  height: 'var(--img-h, auto)',\n  objectFit: 'var(--img-obj-fit, cover)',\n  objectPosition: 'var(--img-position, center center)',\n  aspectRatio: 'var(--img-ratio, auto 2/3)',\n  display: 'var(--img-display, initial)',\n}\n\n/*\n * Img component\n *\n * Renders an <img> element with custom props.\n *\n * @param {string} src - The image source URL.\n * @param {string} alt - The alt text for the image.\n * @param {number} [width=480] - The width of the image.\n * @param {number} [height] - The height of the image.\n * @param {Object} [styles] - Additional CSS styles to apply.\n * @param {boolean} [renderStyles=true] - Whether to render the default styles.\n * @param {\"eager\" | \"lazy\"} [loading=\"lazy\"] - The loading attribute.\n * @param {string} [placeholder] - A placeholder image URL.\n * @param {\"high\" | \"low\"} [fetchpriority=\"low\"] - The fetchpriority attribute.\n * @param {\"sync\" | \"async\" | \"auto\"} [decoding=\"auto\"] - The decoding attribute.\n * @param {function} [imgLoaded] - Callback when image loads successfully.\n * @param {function} [imgError] - Callback when image errors.\n *\n * @returns {JSX.Element} The Img component.\n */\nexport const Img = ({\n  src,\n  alt,\n  width = 480,\n  height,\n  styles,\n  loading = 'lazy',\n  placeholder = `https://via.placeholder.com/${width}?text=PLACEHOLDER`,\n  fetchpriority = 'low',\n  decoding = 'auto',\n  imgLoaded,\n  imgError,\n  ...props\n}: ImageProps) => {\n  const handleImgError = (\n    e: React.SyntheticEvent<HTMLImageElement, Event>,\n  ): void => {\n    if (imgError) {\n      imgError?.(e)\n      return\n    }\n    if (e.currentTarget.src !== placeholder) {\n      e.currentTarget.src = placeholder\n    }\n  }\n\n  const handleImgLoad = (\n    e: React.SyntheticEvent<HTMLImageElement, Event>,\n  ): void => {\n    imgLoaded?.(e)\n  }\n\n  return (\n    <FP\n      as=\"img\"\n      src={src}\n      alt={alt}\n      width={width}\n      height={height || 'auto'}\n      loading={loading}\n      style={styles}\n      onError={handleImgError}\n      onLoad={handleImgLoad}\n      {...props}\n    />\n  )\n}\nImg.styles = defaultStyles\nImg.displayName = 'Img'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\n\n// import\n\nexport interface InputProps extends Omit<ComponentProps, 'children'> {\n  /**\n   * The type of the input.\n   */\n  type?: 'text' | 'password' | 'email' | 'number' | 'tel' | 'url' | 'search'\n  /**\n   * The input name\n   */\n  name?: string\n  /**\n   * The input value\n   */\n  value?: string\n  /**\n   * The input placeholder\n   */\n  placeholder?: string\n  /**\n   * Pass a function to handle input change events\n   */\n  inputChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  /**\n   * Pass a function to handle input focus events\n   */\n  inputBlur?: (e: React.FocusEvent<HTMLInputElement>) => void\n  /**\n   * Function prop to handle input keydown events\n   */\n  inputDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void\n  /**\n   * Input is required or not\n   */\n  required?: boolean\n  /**\n   * Input id attribute\n   */\n  id: string\n  /**\n   * Set the element as disabled\n   */\n  isDisabled?: boolean\n  /**\n   * Set the element as readonly\n   */\n  readonly?: boolean\n  /**\n   * ref to the input element\n   */\n  inputRef?: React.RefObject<HTMLInputElement>\n  /**\n   * Input styles\n   */\n  styles?: {}\n  /**\n   * input classes\n   */\n  classes?: string\n}\n\nexport const defaultStyles = {\n  minWidth: 'var(--input-min-w, 60%)',\n}\n\n/**\n * Input component that renders an HTML input element.\n * @param {InputProps} props - The input component props.\n * @returns {JSX.Element} - The input component.\n */\nexport const Input = ({\n  type = 'text',\n  name,\n  value,\n  placeholder,\n  id,\n  styles,\n  classes,\n  isDisabled,\n  readonly,\n  required,\n  inputRef,\n  inputChange,\n  inputBlur,\n  inputDown,\n  ...props\n}: InputProps): JSX.Element => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (inputChange && !isDisabled) {\n      inputChange?.(e)\n    }\n  }\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (inputBlur && !isDisabled) {\n      inputBlur?.(e)\n    }\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (inputDown && !isDisabled) {\n      e.preventDefault()\n      inputDown?.(e)\n    }\n  }\n\n  return (\n    <FP\n      as=\"input\"\n      id={id}\n      type={type}\n      placeholder={placeholder}\n      className={classes}\n      styles={styles}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      value={value}\n      name={name}\n      ref={inputRef}\n      aria-disabled={isDisabled}\n      tab-index={isDisabled ? -1 : undefined}\n      aria-readonly={readonly}\n      readOnly={readonly}\n      {...props}\n    />\n  )\n}\nInput.styles = defaultStyles\nInput.displayName = 'Input'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\n\nexport type LinkProps = Partial<ComponentProps> & {\n  href: string\n  target?: string\n  rel?: string\n  children: React.ReactNode\n  prefetch?: boolean\n  onPointerDown?: (e: React.PointerEvent<HTMLAnchorElement>) => void\n}\n\nexport const Link = ({\n  href,\n  target,\n  rel,\n  children,\n  styles = {},\n  prefetch = true,\n  onPointerDown,\n  ...props\n}: LinkProps) => {\n  let relValue = rel\n\n  if (target === '_blank')\n    relValue = `noopener noreferrer ${!!prefetch ? 'prefetch' : ''}`\n\n  const handleOnpointerDown = (e: React.PointerEvent<HTMLAnchorElement>) => {\n    if (onPointerDown) onPointerDown?.(e)\n  }\n\n  return (\n    <FP\n      as=\"a\"\n      href={href}\n      target={target}\n      styles={styles}\n      rel={relValue}\n      onPointerDown={handleOnpointerDown}\n      {...props}\n    >\n      {children ?? 'Link'}\n    </FP>\n  )\n}\n\nexport default Link\nLink.displayName = 'Link'\n","import * as React from 'react'\nimport FP from '../fp'\n\nexport interface ListProps {\n  styles?: {}\n  classes?: string\n  children: React.ReactNode\n  type: 'ul' | 'ol' | 'dl'\n  variant: string\n}\n\nexport const List = ({\n  children,\n  classes,\n  type = 'ul',\n  variant,\n  styles,\n  ...props\n}: ListProps) => {\n  return (\n    <FP\n      as={type}\n      data-variant={variant}\n      className={classes}\n      style={styles}\n      {...props}\n    >\n      {children}\n    </FP>\n  )\n}\n\nexport default List\n","import React from 'react'\nimport { ComponentProps } from '../../types'\nimport { Button } from '../buttons/button'\nimport { Dialog } from './dialog'\n\nexport interface ModalProps extends ComponentProps {\n  /**\n   * The child component/content for open button\n   */\n  openChild?: React.ReactNode\n  /**\n   * The child component/content for close button\n   */\n  closeChild?: React.ReactNode\n  /**\n   * The child component/content for modal header\n   */\n  modalHeader?: React.ReactNode\n  /**\n   * The child component/content for modal footer\n   */\n  modalFooter?: React.ReactNode\n  /**\n   * The child component/content for modal body\n   */\n  children: React.ReactNode\n  /**\n   * Open modal on mount when set to true\n   */\n  showOpen?: boolean\n}\nexport const Modal = ({\n  openChild,\n  closeChild,\n  modalHeader,\n  modalFooter,\n  children,\n  showOpen = false,\n  ...props\n}: ModalProps) => {\n  const dialogRef = React.useRef<HTMLDialogElement>(null)\n  const openModal = (): void => {\n    if (dialogRef.current) {\n      if(showOpen)\n      dialogRef.current.show()\n      else\n      dialogRef.current.showModal()\n    }\n  }\n  const closeModal = () => {\n    if (dialogRef.current) {\n      dialogRef.current.close()\n    }\n  }\n\n  return (\n    <>\n      <Dialog modalRef={dialogRef} openOnMount={showOpen} {...props}>\n        <section>\n          {modalHeader}\n          {children}\n          {modalFooter ?? (\n            <div>\n              <Button\n                type=\"button\"\n                pointerDown={() => {\n                  closeModal()\n                }}\n              >\n                {closeChild || 'Close'}\n              </Button>{' '}\n            </div>\n          )}\n        </section>\n      </Dialog>\n      { !showOpen && (\n      <Button type=\"button\" pointerDown={openModal}>\n        {openChild || 'Open Modal'}\n      </Button>\n      )}\n    </>\n  )\n}\n\nModal.displayName = 'Modal'\n","import FP from '../fp'\nimport { ComponentProps } from '../../types'\nimport React from 'react'\n\n\nexport const Caption = ({ children, ...props }: ComponentProps) => {\n  return (\n    <FP as=\"caption\" {...props}>\n      {children}\n    </FP>\n  )\n}\n\nexport const Thead = ({ children, ...props }: ComponentProps) => (\n  <FP as=\"thead\" {...props}>\n    {children}\n  </FP>\n)\n\nexport const Tbody = ({ children, ...props }: ComponentProps) => (\n  <FP as=\"tbody\" {...props}>\n    {children}\n  </FP>\n)\n\nexport const Tr = ({ children, ...props }: ComponentProps) => (\n  <FP as=\"tr\" {...props}>\n    {children}\n  </FP>\n)\n\nexport const Td = ({ children, ...props }: ComponentProps) => (\n  <FP as=\"td\" {...props}>\n    {children}\n  </FP>\n)\n\nexport const Table = ({ id, dataStyle, children, ...props }: ComponentProps) => {\n  return (\n    <FP\n      as=\"section\"\n      id={id}\n      {...props}\n      data-style=\"table-wrapper\"\n    >\n      <table>{children}</table>\n    </FP>\n  )\n}\n\nTable.displayName = 'Table'\nCaption.displayName = 'Caption'\nThead.displayName = 'Thead'\nTbody.displayName = 'Tbody'\nTr.displayName = 'Tr'\nTd.displayName = 'Td'\n\n","import { Table, Caption, Thead, Tbody, Td, Tr } from \"./table-elements\"\nimport { ComponentProps } from '../../types'\n\nexport interface TableProps extends ComponentProps {\n  tblHead: React.ReactNode\n  tblBody: React.ReactNode\n  tblCaption?: React.ReactNode\n}\n\nexport type dataType = {id: number, items: string[]}[]\n\n/**\n * Render the `thead` by passing an array of names\n */\nexport const RenderHead = (data: []) => {\n  const head = data.map((item, index) => {\n    return <th key={index}>{item}</th>\n  })\n  return (\n    <tr>\n      {head}\n    </tr>\n  )\n}\n\n/**\n * Render the table body `tr`, `td` with the data provided\n */\nexport const RenderBody = (data: {}[]) => {\n  const rec = data.map((item, index) => {\n    return (\n      <tr key={index}>\n        {/* <td>{item?.id}</td>\n        <td>{item?.items}</td> */}\n      </tr>\n    )\n  })\n  return (<Tbody>{rec}</Tbody>)\n}\n\n/**\n * Render the table placing `caption`, `thead` and `tbody` in the correct order\n * caption is optional\n */\nexport const RenderTable = ({tblBody, tblCaption, tblHead}: TableProps) => {\n  return (\n    <Table>\n      {tblCaption && <Caption>{tblCaption}</Caption>}\n      <Thead>\n        <Tr>\n          {tblHead}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {tblBody}\n      </Tbody>\n    </Table>\n  )\n}\n\nRenderTable.displayName = 'TBL'\nRenderBody.displayName = 'renderBody'\nRenderHead.displayName = 'renderHead'\n","import FP from '../fp'\nimport React from 'react'\n\nexport type TextElements =\n  | 'p'\n  | 'span'\n  | 'a'\n  | 'strong'\n  | 'em'\n  | 'small'\n  | 's'\n  | 'cite'\n  | 'time'\n  | 'code'\n  | 'kbd'\n  | 'sub'\n  | 'sup'\n  | 'i'\n  | 'b'\n  | 'u'\n  | 'mark'\n  | 'span'\n  | 'blockquote'\nexport interface TextProps {\n  /**\n   * HTML element\n   */\n  elm?: TextElements\n  children?: React.ReactNode\n  text?: String\n  styles?: {}\n}\n\nexport const Text = ({\n  elm = 'p',\n  text,\n  styles,\n  children,\n  ...props\n}: TextProps) => {\n  return (\n    <FP as={elm} styles={styles} {...props}>\n      {children || text}\n    </FP>\n  )\n}\n\nexport const Span = ({\n  elm = 'span',\n  children,\n  styles,\n  ...props\n}: TextProps) => {\n  return (\n    <FP as={elm} styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nexport interface TitleProps {\n  /**\n   * HTML headings\n   */\n  elm?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  children?: React.ReactNode\n  styles?: {}\n}\n\nexport const Title = ({\n  elm = 'h3',\n  children,\n  styles,\n  ...props\n}: TitleProps) => {\n  return (\n    <FP as={elm} styles={styles} {...props}>\n      {children}\n    </FP>\n  )\n}\n\nexport default Text\n\nText.displayName = 'Text'\nTitle.displayName = 'Title'\nSpan.displayName = 'Span'\n","import FP from '../fp'\nimport { InputProps } from './inputs'\nimport { SharedInputProps } from '../../types'\n\nexport interface TextareaProps extends SharedInputProps {\n  /**\n   * The number of lines in textarea\n   */\n  rows?: number\n  /**\n   * The number of columns in textarea\n   */\n  cols?: number\n  /**\n   * Textarea react ref\n   */\n  textareaRef?: React.RefObject<HTMLTextAreaElement>\n  /**\n   * Textarea change event handler\n   */\n  textareaChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\n  /**\n   * Textarea area blur event handler\n   */\n  textareaBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void\n  /**\n   * Textarea keydown event handler\n   */\n  textareaDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void\n}\n\nexport const defaultStyles = {}\n\nexport const Textarea = ({\n  value,\n  rows,\n  cols,\n  id,\n  required,\n  disabled,\n  readonly,\n  textareaBlur,\n  textareaChange,\n  textareaDown,\n  textareaRef,\n  ...props\n}: TextareaProps) => {\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (textareaChange && !disabled) {\n      textareaChange(e)\n    }\n  }\n\n  const handleBlur = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    if (textareaBlur && !disabled) {\n      textareaBlur?.(e)\n    }\n  }\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (textareaDown && !disabled) {\n      textareaDown?.(e)\n    }\n  }\n\n  return (\n    <FP\n      as=\"textarea\"\n      ref={textareaRef}\n      rows={rows}\n      cols={cols}\n      styles={{ ...defaultStyles }}\n      data-style=\"textarea\"\n      id={id}\n      required={required}\n      value={value}\n      aria-disabled={disabled}\n      readOnly={readonly}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      {...props}\n    />\n  )\n}\n\nTextarea.displayName = 'Textarea'\n"]}